name: Build QT

on:
  workflow_dispatch:
    inputs:
      QT_VERSION:
        description: "QT version"
        required: true
        default: "5.15.0"
      PLATFORM:
        description: "Build platform and compiler (win32-msvc)"
        required: false
        default: "win32-msvc"
      PUBLISH:
        description: "Publish package in github (true, false)"
        required: false
        default: "false"

env:
  QTVER: "v${{ github.event.inputs.QT_VERSION }}"
  NUPKG_VER: "${{ github.event.inputs.QT_VERSION }}"
  PLATFORM: "${{ github.event.inputs.PLATFORM }}"

jobs:
  build:
    runs-on: windows-latest

    env:
      vcvars_bat: '"C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"'
      QT_CONF: 'qtbase/bin/qt.conf' # Extract the QT_BUILD_TYPE from this file
      QT_ROOT: '${{ github.workspace}}\..\qt'
      QT_DEPLOY: '${{ github.workspace}}\..\deploy'
      MAKE_TOOL: make

    steps:
    - uses: actions/checkout@v1

    - name: Dump event payload
      run: |
        echo 'github.event_name ${{ github.event_name }}'
        echo 'github.event_path ${{ github.event_path }}'
        #echo 'github.event ${{ github.event }}'
        if ("${{ github.event_path }}") { type ${{ github.event_path }} }

    - name: Create sample content
      run: |
        $deploy_dir = mkdir -Force "${{ env.QT_DEPLOY }}"
        pushd ${{ env.QT_DEPLOY }}

        echo "Sample file created on $(date)" > readme.txt
        mkdir subfolder
        echo "Sample sub-folder created on $(date)" > subfolder/readme2.txt

        popd
        dir -recurse ${{ env.QT_DEPLOY }}

    - name: Create NuGet package
      run: |
        nuget pack -BasePath ${{ env.QT_DEPLOY }} -Version ${{ env.NUPKG_VER }}

        $package_name = $(Get-Item *.nupkg).Name
        echo "::set-env name=NUPKG_NAME::$package_name"

    - name: Publish NuGet package
      if: github.event.inputs.PUBLISH == 'true'
      run: |
        echo "# Authenticate"
        dotnet nuget add source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json -n github -u ${{ github.repository_owner }} -p ${{ secrets.REPO_TOKEN }}

        echo "# Publish"
        dotnet nuget push "*.nupkg" --source "github"

    - uses: actions/upload-artifact@v1
      if: github.event.inputs.PUBLISH != 'true'
      with:
        name: NuGet-package
        path: ${{ env.NUPKG_NAME }}
